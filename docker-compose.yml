version: '3.8'

services:
  # Backend API service
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      # INTENTIONAL ISSUE: Hardcoded credentials in docker-compose
      - DATABASE_URL=postgresql://admin:password123@db:5432/testdb
      - SECRET_KEY=super-secret-key-123
      - DEBUG=true
    depends_on:
      - db
    volumes:
      - ./src:/app/src
      - ./uploads:/app/uploads
    networks:
      - app-network

  # PostgreSQL database
  db:
    image: postgres:13
    environment:
      # INTENTIONAL ISSUE: Weak database credentials
      - POSTGRES_DB=testdb
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  # Frontend development server
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      # INTENTIONAL ISSUE: Exposing API keys in environment
      - REACT_APP_API_KEY=test-api-key-123
    networks:
      - app-network
    depends_on:
      - api

  # Redis for session storage (with security issues)
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    # INTENTIONAL ISSUE: No password protection for Redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - app-network

  # Nginx reverse proxy with misconfigurations
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api
      - frontend
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge